name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dependencies:
    # Build dependencies once if the lockfile has changed.
    # The created virtual environment is used in subsequent runs.
    # If the lockfile hasn't changed, we re-use the virtual environment from the cache.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - uses: actions/setup-python@v2
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        with:
          python-version: "3.9"
      - name: Install Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  isort:
    # Dependencies must to be installed to correctly sort third-party libraries.
    needs: [dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Load cached virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - run: .venv/bin/python -m isort --check-only --diff .

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [black, isort]
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Load cached virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - run: pelican content
      - run: gsutil rsync -R output gs://carrick.eu
      - run: gsutil iam ch allUsers:objectViewer gs://carrick.eu
